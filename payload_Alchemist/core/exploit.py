import requests
from urllib.parse import urlparse
import time

def exploit_open_redirect(vuln_list):
    print("\n[*] Attempting auto-exploit on open redirects...\n")
    results = []

    for item in vuln_list:
        if item.get("type") != "open_redirect":
            continue

        try:
            test_url = item["url"]
            print(f"[~] Testing exploit on: {test_url}")
            response = requests.get(test_url, allow_redirects=True, timeout=5)

            # Followed location
            final_url = response.url
            parsed = urlparse(final_url)

            if "evil.com" in parsed.netloc:
                results.append({
                    "url": test_url,
                    "redirected_to": final_url,
                    "status": "success"
                })
                print(f"[+] Exploited: {test_url} â†’ {final_url}")
            else:
                results.append({
                    "url": test_url,
                    "redirected_to": final_url,
                    "status": "blocked"
                })
                print(f"[-] Blocked or filtered: {final_url}")

        except Exception as e:
            results.append({
                "url": item.get("url"),
                "status": "error",
                "error": str(e)
            })
            print(f"[!] Error: {e}")

        time.sleep(1)  # polite delay

    return results
